--
-- Recruiting seed data for testing
--

-- Temporarily disable the trigger that auto-creates company members
ALTER TABLE companies DISABLE TRIGGER on_company_created;

-- Create recruiter user
INSERT INTO "auth"."users" ("instance_id", "id", "aud", "role", "email", "encrypted_password", "email_confirmed_at", "invited_at", "confirmation_token", "confirmation_sent_at", "recovery_token", "recovery_sent_at", "email_change_token_new", "email_change", "email_change_sent_at", "last_sign_in_at", "raw_app_meta_data", "raw_user_meta_data", "is_super_admin", "created_at", "updated_at", "phone", "phone_confirmed_at", "phone_change", "phone_change_token", "phone_change_sent_at", "email_change_token_current", "email_change_confirm_status", "banned_until", "reauthentication_token", "reauthentication_sent_at", "is_sso_user", "deleted_at", "is_anonymous") VALUES
	('00000000-0000-0000-0000-000000000000', 'a1b2c3d4-e5f6-7890-abcd-ef1234567890', 'authenticated', 'authenticated', 'recruiting@test.com', '$2a$06$bc7mQF9YntvB83LmlSR7HOeDfZyc/b8SQVfb0rrpvmT.NE7FfpGlS', '2025-07-24 13:59:28.712948+00', NULL, '', NULL, '', '2025-07-24 13:59:28.712948+00', '', '', NULL, '2025-07-24 13:59:28.712948+00', '{"provider": "email", "providers": ["email"]}', '{}', NULL, '2025-07-24 13:59:28.712948+00', '2025-07-24 13:59:28.712948+00', NULL, NULL, '', '', NULL, '', 0, NULL, '', NULL, false, NULL, false);

INSERT INTO "auth"."identities" ("provider_id", "user_id", "identity_data", "provider", "last_sign_in_at", "created_at", "updated_at", "id") VALUES
	('a1b2c3d4-e5f6-7890-abcd-ef1234567890', 'a1b2c3d4-e5f6-7890-abcd-ef1234567890', '{"sub": "a1b2c3d4-e5f6-7890-abcd-ef1234567890", "email": "recruiting@test.com"}', 'email', '2025-07-24 13:59:28.712948+00', '2025-07-24 13:59:28.712948+00', '2025-07-24 13:59:28.712948+00', '11111111-1111-1111-1111-111111111111');

-- Create candidate user
INSERT INTO "auth"."users" ("instance_id", "id", "aud", "role", "email", "encrypted_password", "email_confirmed_at", "invited_at", "confirmation_token", "confirmation_sent_at", "recovery_token", "recovery_sent_at", "email_change_token_new", "email_change", "email_change_sent_at", "last_sign_in_at", "raw_app_meta_data", "raw_user_meta_data", "is_super_admin", "created_at", "updated_at", "phone", "phone_confirmed_at", "phone_change", "phone_change_token", "phone_change_sent_at", "email_change_token_current", "email_change_confirm_status", "banned_until", "reauthentication_token", "reauthentication_sent_at", "is_sso_user", "deleted_at", "is_anonymous") VALUES
	('00000000-0000-0000-0000-000000000000', 'b2c3d4e5-f6a7-8901-bcde-f23456789012', 'authenticated', 'authenticated', 'candidate@test.com', '$2a$06$UVZ3wWaZj3p2jRKlrL/63eTAdS8TvZ6D6UsicnshLoJKJSYbfeQEy', '2025-07-24 13:59:28.712948+00', NULL, '', NULL, '', '2025-07-24 13:59:28.712948+00', '', '', NULL, '2025-07-24 13:59:28.712948+00', '{"provider": "email", "providers": ["email"]}', '{}', NULL, '2025-07-24 13:59:28.712948+00', '2025-07-24 13:59:28.712948+00', NULL, NULL, '', '', NULL, '', 0, NULL, '', NULL, false, NULL, false);

INSERT INTO "auth"."identities" ("provider_id", "user_id", "identity_data", "provider", "last_sign_in_at", "created_at", "updated_at", "id") VALUES
	('b2c3d4e5-f6a7-8901-bcde-f23456789012', 'b2c3d4e5-f6a7-8901-bcde-f23456789012', '{"sub": "b2c3d4e5-f6a7-8901-bcde-f23456789012", "email": "candidate@test.com"}', 'email', '2025-07-24 13:59:28.712948+00', '2025-07-24 13:59:28.712948+00', '2025-07-24 13:59:28.712948+00', '22222222-2222-2222-2222-222222222222');

-- Create company
INSERT INTO "public"."companies" ("id", "name", "industry", "company_size", "website", "created_at", "updated_at") VALUES
	('c3d4e5f6-a7b8-9012-cdef-345678901234', 'TechCorp Solutions', 'Software Development', '100-500', 'https://techcorp.example.com', '2025-07-24 14:00:00.000000+00', '2025-07-24 14:00:00.000000+00');

-- Manually add recruiter as company owner (since trigger is disabled)
INSERT INTO "public"."company_members" ("id", "company_id", "user_id", "role", "created_at", "accepted_at") VALUES
	('33333333-3333-3333-3333-333333333333', 'c3d4e5f6-a7b8-9012-cdef-345678901234', 'a1b2c3d4-e5f6-7890-abcd-ef1234567890', 'owner', '2025-07-24 14:00:00.000000+00', '2025-07-24 14:00:00.000000+00');

-- Re-enable the trigger
ALTER TABLE companies ENABLE TRIGGER on_company_created;

-- Create custom job for the company
INSERT INTO "public"."custom_jobs" ("id", "user_id", "company_id", "job_title", "job_description", "company_name", "company_description", "status", "created_at") VALUES
	('d4e5f6a7-b8c9-0123-defa-456789012345', 'a1b2c3d4-e5f6-7890-abcd-ef1234567890', 'c3d4e5f6-a7b8-9012-cdef-345678901234', 'Senior Frontend Engineer', 'We are looking for an experienced Frontend Engineer to join our team. You will be responsible for building responsive web applications using modern JavaScript frameworks. Required: 5+ years experience with React, TypeScript, and modern CSS. Experience with state management, testing, and CI/CD pipelines.', 'TechCorp Solutions', 'TechCorp Solutions is a leading software development company specializing in enterprise web applications. We value innovation, collaboration, and continuous learning.', 'unlocked', '2025-07-24 14:05:00.000000+00');

-- Create custom job questions
INSERT INTO "public"."custom_job_questions" ("id", "custom_job_id", "question", "answer_guidelines", "question_type", "publication_status", "created_at") VALUES
	('44444444-4444-4444-4444-444444444444', 'd4e5f6a7-b8c9-0123-defa-456789012345', 'Tell me about your experience with React and how you have used it to build scalable applications.', 'Look for: Understanding of React fundamentals (hooks, state management, lifecycle), experience with large-scale applications, performance optimization techniques, component architecture decisions.', 'user_generated', 'published', '2025-07-24 14:10:00.000000+00'),
	('55555555-5555-5555-5555-555555555555', 'd4e5f6a7-b8c9-0123-defa-456789012345', 'How do you approach testing in frontend applications? What tools and strategies do you use?', 'Look for: Knowledge of testing pyramid, unit testing with Jest/React Testing Library, integration testing, E2E testing tools like Cypress/Playwright, TDD approach, code coverage strategies.', 'user_generated', 'published', '2025-07-24 14:10:00.000000+00');

-- Create candidate application
INSERT INTO "public"."company_job_candidates" ("id", "company_id", "custom_job_id", "candidate_user_id", "status", "applied_at", "created_at", "updated_at") VALUES
	('66666666-6666-6666-6666-666666666666', 'c3d4e5f6-a7b8-9012-cdef-345678901234', 'd4e5f6a7-b8c9-0123-defa-456789012345', 'b2c3d4e5-f6a7-8901-bcde-f23456789012', 'applied', '2025-07-24 15:00:00.000000+00', '2025-07-24 15:00:00.000000+00', '2025-07-24 15:00:00.000000+00');

-- Create mock interview
INSERT INTO "public"."custom_job_mock_interviews" ("id", "custom_job_id", "candidate_id", "user_id", "interview_prompt", "status", "created_at") VALUES
	('77777777-7777-7777-7777-777777777777', 'd4e5f6a7-b8c9-0123-defa-456789012345', '66666666-6666-6666-6666-666666666666', 'b2c3d4e5-f6a7-8901-bcde-f23456789012', 'This is a technical interview for the Senior Frontend Engineer position at TechCorp Solutions. Focus on React experience, testing strategies, and system design.', 'complete', '2025-07-24 16:00:00.000000+00');

-- Create mock interview messages
INSERT INTO "public"."mock_interview_messages" ("id", "mock_interview_id", "role", "text", "created_at") VALUES
	('a1111111-1111-1111-1111-111111111111', '77777777-7777-7777-7777-777777777777', 'model', 'Hello Jane! Welcome to your interview for the Senior Frontend Engineer position at TechCorp Solutions. I''m excited to learn about your experience. Let''s start with your background - can you tell me about your experience with React and how you''ve used it to build scalable applications?', '2025-07-24 16:00:00.000000+00'),
	('a2222222-2222-2222-2222-222222222222', '77777777-7777-7777-7777-777777777777', 'user', 'Thank you! I have about 7 years of experience working with React. In my current role at StartupXYZ, I architected and led the development of our main customer-facing application that serves over 100,000 daily active users. I implemented a micro-frontend architecture using Module Federation, which allowed our teams to work independently while maintaining a cohesive user experience. For state management, we used Redux Toolkit with RTK Query for efficient data fetching and caching.', '2025-07-24 16:01:00.000000+00'),
	('a3333333-3333-3333-3333-333333333333', '77777777-7777-7777-7777-777777777777', 'model', 'That''s impressive! The micro-frontend architecture sounds like a great solution for team scalability. I''m curious about the performance aspects - with 100,000 daily active users, what specific optimization techniques did you implement in your React application?', '2025-07-24 16:02:00.000000+00'),
	('a4444444-4444-4444-4444-444444444444', '77777777-7777-7777-7777-777777777777', 'user', 'Performance was definitely a key focus. We implemented several optimizations: First, we used React.lazy and Suspense for code splitting, reducing our initial bundle size by 60%. We also implemented virtual scrolling for large lists using react-window, and memoized expensive computations with useMemo and React.memo for components. Additionally, we set up performance monitoring with Web Vitals and created custom performance budgets in our CI/CD pipeline to catch regressions early.', '2025-07-24 16:03:00.000000+00'),
	('a5555555-5555-5555-5555-555555555555', '77777777-7777-7777-7777-777777777777', 'model', 'Excellent approach to performance optimization! The combination of code splitting and performance monitoring shows great attention to user experience. Now, let''s talk about testing - how do you approach testing in your frontend applications? What tools and strategies do you typically use?', '2025-07-24 16:04:00.000000+00'),
	('a6666666-6666-6666-6666-666666666666', '77777777-7777-7777-7777-777777777777', 'user', 'I''m a strong believer in the testing pyramid approach. At the base, we have comprehensive unit tests using Jest and React Testing Library, aiming for at least 80% code coverage. For integration tests, we test complete user flows within features. We use MSW (Mock Service Worker) to mock API responses consistently. For E2E tests, we use Playwright to test critical user paths. I also practice TDD when building new features - writing tests first helps me think through the component API and edge cases before implementation.', '2025-07-24 16:05:00.000000+00'),
	('a7777777-7777-7777-7777-777777777777', '77777777-7777-7777-7777-777777777777', 'model', 'Your testing strategy is very comprehensive! I particularly like your use of MSW for consistent API mocking. Speaking of APIs, can you tell me about a challenging technical problem you''ve solved recently, perhaps related to data fetching or state management?', '2025-07-24 16:06:00.000000+00'),
	('a8888888-8888-8888-8888-888888888888', '77777777-7777-7777-7777-777777777777', 'user', 'Recently, we faced a challenge with real-time data synchronization across multiple components. We had a dashboard showing live analytics that needed to update every few seconds without causing unnecessary re-renders. I implemented a solution using React Query with WebSocket integration. We created custom hooks that subscribed to specific data channels, and used React Query''s mutation features to optimistically update the UI while syncing with the backend. This reduced our server load by 40% and improved perceived performance significantly.', '2025-07-24 16:07:00.000000+00'),
	('a9999999-9999-9999-9999-999999999999', '77777777-7777-7777-7777-777777777777', 'model', 'That''s a sophisticated solution! The combination of React Query with WebSockets for real-time updates while maintaining performance is impressive. Before we wrap up, do you have any questions about the role or TechCorp Solutions?', '2025-07-24 16:08:00.000000+00'),
	('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', '77777777-7777-7777-7777-777777777777', 'user', 'Yes, I''d love to know more about the team structure and the main technical challenges you''re currently facing. Also, what does the tech stack look like beyond React? Are you using any specific state management solutions or component libraries?', '2025-07-24 16:09:00.000000+00');